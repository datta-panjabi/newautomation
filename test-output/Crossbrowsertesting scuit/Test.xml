<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="LAPTOP-2Q5AHFQA" failures="0" tests="3" name="Test" time="2.392" errors="0" timestamp="2023-05-26T09:01:03 IST">
  <testcase classname="testNg.Testbaseclass" name="@BeforeClass login" time="2.317">
    <failure type="org.openqa.selenium.SessionNotCreatedException" message="Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no &amp;apos;moz:firefoxOptions.binary&amp;apos; capability provided, and no binary flag set on the command line 
Host info: host: &amp;apos;LAPTOP-2Q5AHFQA&amp;apos;, ip: &amp;apos;192.168.56.120&amp;apos;
Build info: version: &amp;apos;4.9.0&amp;apos;, revision: &amp;apos;d7057100a6&amp;apos;
System info: os.name: &amp;apos;Windows 11&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;17.0.4.1&amp;apos;
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}]}]">
      <![CDATA[org.openqa.selenium.SessionNotCreatedException: Could not start a new session. Response code 500. Message: Expected browser binary location, but unable to find binary in default location, no 'moz:firefoxOptions.binary' capability provided, and no binary flag set on the command line 
Host info: host: 'LAPTOP-2Q5AHFQA', ip: '192.168.56.120'
Build info: version: '4.9.0', revision: 'd7057100a6'
System info: os.name: 'Windows 11', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.4.1'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [null, newSession {capabilities=[Capabilities {acceptInsecureCerts: true, browserName: firefox, moz:debuggerAddress: true, moz:firefoxOptions: {}}]}]
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:136)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:94)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:68)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:165)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:183)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:158)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:229)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:157)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:150)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:146)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:131)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:127)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:112)
at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:102)
at testNg.Testbaseclass.login(Testbaseclass.java:33)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 25 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeClass login -->
  <testcase classname="testNg.Testbaseclass" name="@BeforeMethod enteridpass" time="-1.685071863832E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod enteridpass -->
  <testcase classname="testNg.Testbaseclass" name="@AfterMethod logout" time="-1.685071863843E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="testNg.Testbaseclass" name="@BeforeMethod enteridpass" time="-1.685071863848E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod enteridpass -->
  <testcase classname="testNg.Testbaseclass" name="@AfterMethod logout" time="-1.685071863852E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="testNg.Testbaseclass" name="@BeforeMethod enteridpass" time="-1.685071863853E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod enteridpass -->
  <testcase classname="testNg.Testbaseclass" name="@AfterMethod logout" time="-1.685071863857E9">
    <skipped/>
  </testcase> <!-- @AfterMethod logout -->
  <testcase classname="testNg.Testbaseclass" name="@AfterClass teardown" time="-1.685071863857E9">
    <skipped/>
  </testcase> <!-- @AfterClass teardown -->
  <testcase classname="testNg.Testclass1" name="TC_01verifyloginfunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- TC_01verifyloginfunctionality -->
  <testcase classname="testNg.Testclass1" name="TC_03verifyaddtocartfunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- TC_03verifyaddtocartfunctionality -->
  <testcase classname="testNg.Testclass1" name="TC_02verifylogoutfunctionality" time="0.0">
    <skipped/>
  </testcase> <!-- TC_02verifylogoutfunctionality -->
</testsuite> <!-- Test -->
